C51 COMPILER V8.05a   MAIN                                                                 05/31/2013 15:39:46 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /************************************************************************************/
   2          //      版权所有：Copyright (c) 2005 - 2010 ICRoute INC.
   3          /************************************************************************************/
   4          
   5          #include "STC10F08XE.H"
   6          #include "LDchip.h"
   7          #include "Reg_RW.h"
   8          #include "FlashDef.h"
   9          #include "SubFuncs.h"
  10          #include "math.h"
  11          
  12          
  13          /************************************************************************************/
  14          //      nAsrStatus 用来在main主程序中表示程序运行的状态，不是LD3320芯片内部的状态寄存器
  15          //      LD_ASR_NONE:            表示没有在作ASR识别
  16          //      LD_ASR_RUNING：         表示LD3320正在作ASR识别中
  17          //      LD_ASR_FOUNDOK:         表示一次识别流程结束后，有一个识别结果
  18          //      LD_ASR_FOUNDZERO:       表示一次识别流程结束后，没有识别结果
  19          //      LD_ASR_ERROR:           表示一次识别流程中LD3320芯片内部出现不正确的状态
  20          /***********************************************************************************/
  21          uint8 idata nAsrStatus=0;
  22                  
  23          #define Same_VOIC_COUNT  9              //定义长度和播放语音长度一致，用以判断返回值是否需要播放语音
  24          
  25          extern void    _nop_     (void);
  26          
  27          void MCU_init();
  28          void FlashLED(uint8 nTimes);
  29          void PlaySound(uint8 nCode);
  30          uint8 RunASR();
  31          void ProcessInt0();
  32          void UART_init();
  33          void OutputIO(uint8 nRes);
  34          void LED_TEST();
  35          
  36          
  37          //定义红外模块接口
  38          sbit Redout=P2^4;
  39          sbit tiaozhi=P2^5;
  40          sbit Redin=P2^7;
  41          
  42          //定义红外模块控制信号
  43          sbit key1=P4^2;//按键按下则表示进入学习状态
  44          sbit key2=P1^1;
  45          sbit key3=P4^3;
  46          
  47          
  48          unsigned char bianma[8][3]={0xB2,0x7B,0xE0,0xB2,0x9f,0x8c,0xB2,0x6b,0xe0};//编码存储器关、开、摆风（关）
  49          unsigned char index;//用于编码存储器计数
  50          unsigned char flag;//学习成功标志
  51          uint8 flag_shibie;
  52          long int count;//用于计数
  53          uint8 flag_fashe1,flag_fashe2;//发射标志
  54          
  55          unsigned char tmp,tt;
C51 COMPILER V8.05a   MAIN                                                                 05/31/2013 15:39:46 PAGE 2   

  56          
  57          void xuexi();
  58          void xuanze(uint8 nRes);
  59          void fashe(uint8 nRes);
  60          
  61          void fashe_yindao();
  62          void fashe_1();
  63          void fashe_0();
  64          
  65          
  66          void  main()
  67          {
  68   1      //      uint8 idata nAsrRes;//识别结果对应的标号
  69   1              MCU_init();
  70   1              //UART_init();
  71   1              LD_reset();
  72   1              BUZZ=0;//关蜂鸣器
  73   1              nAsrStatus = LD_ASR_NONE;               //      初始状态：没有在作ASR   
  74   1      
  75   1              //红外模块接口初始化
  76   1              tiaozhi=0;
  77   1              Redout=0;
  78   1              count=0;
  79   1              flag=0;
  80   1              index=0;
  81   1              flag_fashe1=0;
  82   1              flag_fashe2=0;
  83   1              flag_shibie=0;
  84   1      
  85   1              tmp=0;
  86   1              tt=0;
  87   1      
  88   1              while(1)
  89   1              {
  90   2                      
  91   2      
  92   2                      //if (bMp3Play!=0)                      //      如果还在播放MP3中，则等待，直到MP3播放完毕 即bMp3Play==0
  93   2                      //      continue;                               //      bMp3Play 是定义的一个全局变量用来记录MP3播放的状态，不是LD3320芯片内部的寄存器
  94   2                      
  95   2                      //if(flag==0)continue;
  96   2                      /*
  97   2                      switch(nAsrStatus)
  98   2                      {
  99   2                              case LD_ASR_RUNING:
 100   2                              case LD_ASR_ERROR:              
 101   2                                      break;
 102   2                              case LD_ASR_NONE:
 103   2                              {
 104   2      
 105   2                                      nAsrStatus=LD_ASR_RUNING;
 106   2                                      if (RunASR()==0)        //      启动一次ASR识别流程：ASR初始化，ASR添加关键词语，启动ASR运算
 107   2                                      {
 108   2                                              nAsrStatus = LD_ASR_ERROR;
 109   2                                      }
 110   2                                      break;
 111   2                              }
 112   2                              case LD_ASR_FOUNDOK:
 113   2                              {
 114   2                                      nAsrRes = LD_GetResult();       //      一次ASR识别流程结束，去取ASR识别结果
 115   2                                      FlashLED(nAsrRes+1);
 116   2                                      fashe(nAsrRes);
 117   2                                      nAsrStatus = LD_ASR_NONE;                               
C51 COMPILER V8.05a   MAIN                                                                 05/31/2013 15:39:46 PAGE 3   

 118   2                                      break;
 119   2                              }
 120   2                              case LD_ASR_FOUNDZERO:
 121   2                              default:
 122   2                              {
 123   2                                      nAsrStatus = LD_ASR_NONE;
 124   2                                      break;
 125   2                              }
 126   2                      }// switch
 127   2                      */
 128   2      
 129   2                      //检测是否有按键发射信号        
 130   2                      if(key1==0)
 131   2                      {
 132   3                              delay(150);//消抖
 133   3                              if(key1==0)
 134   3                              {
 135   4                                      
 136   4                                      fashe(0);
 137   4                                      SendChar('1');
 138   4                                      Redin=1;
 139   4                                      delay(10300);
 140   4                              }
 141   3                      }
 142   2      
 143   2                      if(key2==0)
 144   2                      {
 145   3                              delay(150);//消抖
 146   3                              if(key2==0)
 147   3                              {
 148   4                                      
 149   4                                      fashe(1);
 150   4                                      SendChar('2');
 151   4                                      Redin=0;
 152   4                                      delay(10300);
 153   4                              }
 154   3                      }
 155   2      
 156   2                      if(key3==0)
 157   2                      {
 158   3                              delay(150);//消抖
 159   3                              if(key3==0)
 160   3                              {
 161   4                                      
 162   4                                      fashe(2);
 163   4                                      SendChar('3');
 164   4                                      delay(10300);
 165   4                              }
 166   3                      }
 167   2      
 168   2                      if(tt)
 169   2                      {
 170   3                              if(tmp=='0')fashe(0);
 171   3                              else if(tmp=='1')fashe(1);
 172   3                              else if(tmp=='2')fashe(2);
 173   3      
 174   3                              tt=0;
 175   3                      }
 176   2      
 177   2              }// while
 178   1      
 179   1      }
C51 COMPILER V8.05a   MAIN                                                                 05/31/2013 15:39:46 PAGE 4   

 180          
 181          //定时器0产生38KHZ的调制波
 182          void time0int(void) interrupt 1 //13us中断一次
 183          {
 184   1              count++;
 185   1              tiaozhi=~tiaozhi;       
 186   1      }
 187          
 188          
 189          void Uart_Isr(void) interrupt 4
 190          {
 191   1              if(RI)
 192   1              {
 193   2                      RI=0;
 194   2                      tmp=SBUF;
 195   2                      //tt=1;
 196   2                      SendChar(tmp);
 197   2                      //if(tmp=='0') fashe(0);//off
 198   2                      //else if(tmp=='1') fashe(1);//on
 199   2                      //else if(tmp=='2') fashe(2);
 200   2                      tt=1;
 201   2                      
 202   2              }
 203   1              if(TI)
 204   1              {
 205   2                      TI=0;   
 206   2              }
 207   1      }
 208          
 209          
 210          //4.36ms的高电平；4.36ms的低电平
 211          void fashe_yindao()
 212          {
 213   1              //发射引导码
 214   1              count=0;
 215   1              Redout=1;                                       
 216   1              while(count<340);
 217   1              Redout=0;
 218   1              count=0;        
 219   1              while(count<335);
 220   1      }
 221          
 222          //0.58ms的高电平；1.54ms的低电平
 223          void fashe_1()
 224          {
 225   1              count=0;        
 226   1              Redout=1;                               
 227   1              while(count<42);
 228   1              Redout=0;
 229   1              count=0;
 230   1              while(count<124);
 231   1      }
 232          
 233          //0.58ms的高电平；0.52ms的低电平
 234          void fashe_0()
 235          {
 236   1              count=0;
 237   1              Redout=1;
 238   1              while(count<42);
 239   1              Redout=0;
 240   1              count=0;
 241   1              while(count<42);
C51 COMPILER V8.05a   MAIN                                                                 05/31/2013 15:39:46 PAGE 5   

 242   1      }
 243          
 244          
 245          void fashe(uint8 nRes)
 246          {
 247   1              unsigned char i,j,k,bianma_temp,flag01;
 248   1              TR0=1;
 249   1              FlashLED(nRes+1);//闪烁相应次数
 250   1              //发射引导码
 251   1              fashe_yindao();
 252   1              //发射编码
 253   1              for(i=0;i<3;i++)//发射三段编码
 254   1              {
 255   2                      bianma_temp=bianma[nRes][i];
 256   2                      for(j=0;j<2;j++)//发射一段编码中的正、反码
 257   2                      {       
 258   3                              if(j==1)        bianma_temp=~bianma_temp;//反转编码
 259   3                              //发射
 260   3                              for(k=0;k<8;k++)
 261   3                              {
 262   4                                      flag01=(bianma_temp>>(7-k))&1;
 263   4                                  //每次发射都要重新置数
 264   4                                      if(flag01)//发射1
 265   4                                      {
 266   5                                              fashe_1();
 267   5                                      }
 268   4                                      else//发射0
 269   4                                      {       
 270   5                                              fashe_0();
 271   5                                      }       
 272   4                              }
 273   3                      }
 274   2              }
 275   1              //发射0.58ms的高电平(这里约为0.56ms)
 276   1              count=0;
 277   1              Redout=1;
 278   1              while(count<42);
 279   1              Redout=0;
 280   1              count=0;
 281   1              while(count<390);
 282   1              
 283   1              fashe_yindao();
 284   1              for(i=0;i<3;i++)//发射三段编码
 285   1              {
 286   2                      bianma_temp=bianma[nRes][i];
 287   2                      for(j=0;j<2;j++)//发射一段编码中的正、反码
 288   2                      {       
 289   3                              if(j==1)        bianma_temp=~bianma_temp;//反转编码
 290   3                              //发射
 291   3                              for(k=0;k<8;k++)
 292   3                              {
 293   4                                      flag01=(bianma_temp>>(7-k))&1;
 294   4                                  //每次发射都要重新置数
 295   4                                      if(flag01)//发射1
 296   4                                      {
 297   5                                              fashe_1();
 298   5                                      }
 299   4                                      else//发射0
 300   4                                      {       
 301   5                                              fashe_0();
 302   5                                      }       
 303   4                              }
C51 COMPILER V8.05a   MAIN                                                                 05/31/2013 15:39:46 PAGE 6   

 304   3                      }
 305   2              }
 306   1              //发射0.58ms的高电平(这里约为0.56ms)
 307   1              count=0;
 308   1              Redout=1;
 309   1              while(count<41);
 310   1              TR0=0;
 311   1              Redout=0;       
 312   1              tiaozhi=0;
 313   1      }
 314          
 315          //学习
 316          void xuexi()
 317          {
 318   1              if(key1==0&&index<8)
 319   1              {
 320   2                      //开始闪灯，提示进入学习状态
 321   2                      unsigned char i,temp;
 322   2                      FlashLED(index+1);//闪烁相应次数
 323   2                      //等待引导码
 324   2                  while(Redin);//等到低电平，退出判断是否为引导码
 325   2                      delay(50);//约延时6.2ms，引导码开始为9ms的低电平
 326   2                      if(Redin==0)//确实为引导码
 327   2                      {
 328   3                              flag=0;//重新标志
 329   3                              delay(31);//4.5ms
 330   3                              while(Redin);//等待引导码结束
 331   3                              for(i=0;i<32;i++)
 332   3                              {
 333   4                                      while(Redin==0);
 334   4                                      count=0;//计数值清零
 335   4                                      TH1=0xFF;
 336   4                                      TL1=0x98;
 337   4                                      TR1=1;//开定时器1
 338   4                                      while(Redin);
 339   4                                      TR1=0;
 340   4                                      temp=i/8;//第几段编码
 341   4                                      //保存编码
 342   4                                      if(abs(10-count)<2)
 343   4                                      {
 344   5                                              bianma[index][temp]|=0;
 345   5                                              bianma[index][temp]<<=1;
 346   5                                      }
 347   4                                      else
 348   4                                      {
 349   5                                              bianma[index][temp]|=1;
 350   5                                              bianma[index][temp]<<=1;
 351   5                                      }       
 352   4                              }
 353   3                              //判断保存的编码是否有误
 354   3                              if(bianma[index][2]==~bianma[index][3])
 355   3                              {
 356   4                                      unsigned char yiwei;
 357   4                                      yiwei=1;
 358   4                                      yiwei<<=index;
 359   4                                      flag|=yiwei;//学习成功
 360   4                                      FlashLED(index+1);//闪烁相应次数
 361   4                                      index++;
 362   4                              }
 363   3                      }
 364   2      
 365   2              }
C51 COMPILER V8.05a   MAIN                                                                 05/31/2013 15:39:46 PAGE 7   

 366   1      }
 367          
 368          
 369          void xuanze(uint8 nRes)
 370          {
 371   1              switch(nRes)
 372   1              {
 373   2                      case 0:
 374   2                              if((flag>>7)&1) fashe(0);break;
 375   2                      case 1:
 376   2                              if((flag>>6)&1) fashe(1);break;
 377   2                      case 2:
 378   2                              if((flag>>5)&1) fashe(2);break;
 379   2                      case 3:
 380   2                              if((flag>>4)&1) fashe(3);break;
 381   2                      case 4:
 382   2                              if((flag>>3)&1) fashe(4);break;
 383   2                      case 5:
 384   2                              if((flag>>2)&1) fashe(5);break;
 385   2                      case 6:
 386   2                              if((flag>>1)&1) fashe(6);break;
 387   2                      case 7:
 388   2                              if(flag&1)      fashe(7);break;
 389   2                      //*******更多操作请自行添加*********//
 390   2              }
 391   1      }
 392          
 393          
 394          
 395          
 396          void MCU_init()
 397          {
 398   1              P1M0 |= 1;//LD的模式选择位强输出：0并行；1SPI
 399   1              P3M0 |= 8;//LD的RS位强输出
 400   1              P4SW = 0xFF;//将P4口设置为IO
 401   1              P0 = 0xff;
 402   1              P1 = 0xff;
 403   1              P2 = 0xff;
 404   1              P3 = 0xf7;
 405   1              P4 = 0x3f;
 406   1              UART_init();
 407   1      
 408   1      
 409   1      #if defined (SOFT_SPI_PORT)             //      软件模拟SPI读写
                      LD_MODE = 1;                            //      设置MD管脚为高
              #elif defined (HARD_SPI_PORT)   //      硬件实现SPI读写
                      LD_MODE = 1;                            //      设置MD管脚为高
              #else                                                   //      并行读写 （硬件实现或者软件模拟），开发板使用这项
 414   1              LD_MODE = 0;                            //      设置MD管脚为低
 415   1      #endif
 416   1      
 417   1              AUXR  =  0x15;//12分频作为定时器始时钟
 418   1      
 419   1              IP=0;
 420   1              IPH=0;
 421   1      
 422   1              PX0=1; 
 423   1              PT0=1;
 424   1      
 425   1              PS=1;
 426   1              IPH |= 1;//外部中断0的优先级最高        
 427   1              
C51 COMPILER V8.05a   MAIN                                                                 05/31/2013 15:39:46 PAGE 8   

 428   1              EX0=0;
 429   1              EX1=0;
 430   1              EA=1;
 431   1      
 432   1              //定时器初始化
 433   1              TMOD=0x22;
 434   1              EA=1;//开总中断
 435   1              ET0 = 1;//开定时器0的中断
 436   1              ET1=1;//开定时器1的中断
 437   1      
 438   1              TH0=0xe8;
 439   1              TL0=0xe8;
 440   1      
 441   1              TR0=0;
 442   1              TR1=0;
 443   1      }
 444          
 445          void  delay(unsigned long uldata)
 446          {
 447   1              unsigned int j  =  0;
 448   1              unsigned long g  =  0;
 449   1              for (j=0;j<5;j++)
 450   1              {
 451   2                      for (g=0;g<uldata;g++)
 452   2                      {
 453   3                              _nop_();
 454   3                              _nop_();
 455   3                              _nop_();
 456   3                      }
 457   2              }
 458   1      }
 459          
 460          
 461          /*********************************************************************
 462          //为了消除编译时的 警告 *** WARNING L15: MULTIPLE CALL TO SEGMENT
 463          //把在中断函数中需要调用的函数重新复制并命名
 464          //消除警告 Warning L15，并且避免由于函数重入可能带来的隐藏Bug
 465          /*********************************************************************/
 466          
 467          void  delay_2(unsigned long uldata)
 468          {
 469   1              unsigned int j  =  0;
 470   1              unsigned long g  =  0;
 471   1              for (j=0;j<5;j++)
 472   1              {
 473   2                      for (g=0;g<uldata;g++)
 474   2                      {
 475   3                              _nop_();
 476   3                              _nop_();
 477   3                              _nop_();
 478   3                      }
 479   2              }
 480   1      }
 481          
 482          void FlashLED(uint8 nTimes)
 483          {
 484   1              uint8 k;
 485   1              for (k=0; k<nTimes; k++)
 486   1              {
 487   2                      DS01=0;
 488   2                      //DS02=0;
 489   2                      //BUZZ=1;
C51 COMPILER V8.05a   MAIN                                                                 05/31/2013 15:39:46 PAGE 9   

 490   2                      delay(5300);
 491   2                      DS01=1;
 492   2                      //DS02=1;
 493   2                      //BUZZ=0;
 494   2                      delay(5300);
 495   2              }
 496   1      }
 497          
 498          /************************************************************************************/
 499          //
 500          //      IO_Send_Byte()是主控MCU向spi-flash (型号为华邦的 W25Q32)发送指令
 501          //      开发者应该根据自己使用的存储芯片去写具体的函数
 502          //
 503          //      ICroute公司无法对存储芯片的读写提供技术支持，
 504          //      开发者需要自己向自己使用的存储芯片的厂商获得技术支持
 505          //      或者在网络上搜索相关代码和文档
 506          //
 507          //      华邦的spi-flash的技术支持的文档页面在：
 508          //      http://www.winbond.com.tw/hq/cht/ProductAndSales/ProductLines/FlashMemory/SerialFlash/
 509          //      http://www.xtdpj.com/show_hdr.php?xname=915RL41&dname=23T0M41&xpos=84
 510          /************************************************************************************/
 511          
 512          void IO_Send_Byte(uint8 dataout)
 513          {
 514   1               uint8 i = 0; 
 515   1               FLASH_CS = 0;
 516   1               for (i=0; i<8; i++)
 517   1               {
 518   2                        if ((dataout & 0x80) == 0x80) 
 519   2                                 FLASH_DIO = 1;
 520   2                        else
 521   2                                 FLASH_DIO = 0;
 522   2                        FLASH_CLK = 1;
 523   2                        dataout = (dataout << 1); 
 524   2                        FLASH_CLK = 0;   
 525   2               }
 526   1      }
 527          
 528          
 529          /************************************************************************************/
 530          //      RunASR()函数实现了一次完整的ASR语音识别流程
 531          //      LD_AsrStart() 函数实现了ASR初始化
 532          //      LD_AsrAddFixed() 函数实现了添加关键词语到LD3320芯片中
 533          //      LD_AsrRun()     函数启动了一次ASR语音识别流程
 534          //
 535          //      任何一次ASR识别流程，都需要按照这个顺序，从初始化开始进行
 536          /************************************************************************************/
 537          
 538          uint8 RunASR()
 539          {
 540   1              uint8 i=0;
 541   1              uint8 asrflag=0;
 542   1              for (i=0; i<5; i++)                     //      防止由于硬件原因导致LD3320芯片工作不正常，所以一共尝试5次启动ASR识别流程
 543   1              {
 544   2                      LD_AsrStart();
 545   2                      delay(100);
 546   2                      if (LD_AsrAddFixed()==0)
 547   2                      {
 548   3                              LD_reset();                     //      LD3320芯片内部出现不正常，立即重启LD3320芯片
 549   3                              delay(100);                     //      并从初始化开始重新ASR识别流程
 550   3                              continue;
 551   3                      }
C51 COMPILER V8.05a   MAIN                                                                 05/31/2013 15:39:46 PAGE 10  

 552   2                      delay(10);
 553   2                      if (LD_AsrRun() == 0)
 554   2                      {
 555   3                              LD_reset();                     //      LD3320芯片内部出现不正常，立即重启LD3320芯片
 556   3                              delay(100);                     //      并从初始化开始重新ASR识别流程
 557   3                              continue;
 558   3                      }
 559   2      
 560   2                      asrflag=1;
 561   2                      break;                                  //      ASR流程启动成功，退出当前for循环。开始等待LD3320送出的中断信号
 562   2              }
 563   1      
 564   1              return asrflag;
 565   1      }
 566          
 567          void ExtInt0Handler(void) interrupt 0  
 568          {
 569   1              ProcessInt0();                          //      LD3320 送出中断信号，包括ASR和播放MP3的中断，需要在中断处理函数中分别处理
 570   1      }
 571          
 572          //-------------------------------------------------------
 573          void UART_init()                        //进行串口的相关信息初始化工作
 574          {
 575   1      #define   RELOAD_COUNT   0XFA
 576   1      
 577   1              SCON  =  0x50;             //0101，0000  8位可变波特率，无奇偶校验位
 578   1              BRT   =  RELOAD_COUNT;     ////定义波特率发生器重载值，晶体频率22.1184M,1T,SMOD=0;波特率115200bps    
 579   1              AUXR  =  0x15;  //将BRTR=1，BRTx12=1(1T模式)，SBRS=1
 580   1                            //T0x12,T1x12,UART_M0x6,BRTR,S2SMOD,BRTx12,XRAM,SBRS
 581   1                            //Baud=Fosc/(256-RELOAD_COUNT)/32/12  (12T模式)
 582   1                            //Baud=Fosc/(256-RELOAD_COUNT)/32     (1T模式)
 583   1                            //BRTR=1，启动独立波特率发生器
 584   1                            //S1BRS=1，串口1选择独立波特率发生器作为波特率发生器
 585   1                            //此时定时器1可以释放出来作为定时器，计数器，时钟输出使用
 586   1              //AUXR1=0x80；//释放该行指令，则串行口从P3切换到P1，设计串口在P1,不支持
 587   1      
 588   1      
 589   1              //TMOD = 0x11;  // 0010 0001 
 590   1                                              //设置定时器0为16位计数器
 591   1                                              //设置定时器1为8位自动重载计数器
 592   1      
 593   1              TR0 = 0;
 594   1              TR1 = 0;        // 前面设置了专用波特率发生器。不使用Timer1.
 595   1      
 596   1              ES    =   1;      //允许串口中断
 597   1              EA    =   1;      //开总中断    
 598   1                                                  
 599   1      }
 600          
 601          //以下几个函数为从串口打印信息到PC机的函数，开发者可以直接调用
 602          void SendChar (uint8 data_to_tx) 
 603          {
 604   1      #ifdef LD_DEBUG
 605   1              //ES      =             0;  //关串口中断
 606   1              //TI    =   0;  //清零串口发送完成中断请求标志
 607   1              SBUF  =  data_to_tx;
 608   1              //while(TI==0); //等待发送完成
 609   1              //TI    =   0;
 610   1              //ES    =   1;  //允许串口中断
 611   1      #endif
 612   1      }
 613          
C51 COMPILER V8.05a   MAIN                                                                 05/31/2013 15:39:46 PAGE 11  

 614          void SendLineEnd(void) 
 615          {
 616   1      #ifdef LD_DEBUG
 617   1              SendChar(0x0D);
 618   1              SendChar(0x0A);
 619   1      #endif
 620   1      }
 621          
 622          void SendString(unsigned char *pt)
 623          {
 624   1      #ifdef LD_DEBUG
 625   1          while(*pt)
 626   1                      SendChar(*(pt++));
 627   1      #endif
 628   1      }
 629          
 630          void SendByteHex (uint8 value)
 631          {
 632   1      #ifdef LD_DEBUG
 633   1              uint8 idata ch1 = value & 0xF0;
 634   1              ch1 = ch1>>4;
 635   1              if (ch1>9)
 636   1                      ch1 = 'A' + ch1 - 10;
 637   1              else 
 638   1                      ch1 = '0' + ch1;
 639   1              SendChar(ch1);
 640   1              ch1 = value & 0x0F;
 641   1              if (ch1>9)
 642   1                      ch1 = 'A' + ch1 - 10;
 643   1              else 
 644   1                      ch1 = '0' + ch1;
 645   1              SendChar(ch1);
 646   1              SendChar(' ');
 647   1      #endif
 648   1      }
 649          
 650          void SendLongHex (uint32 value)
 651          {
 652   1      #ifdef LD_DEBUG
 653   1              uint8 idata bt;
 654   1              SendChar('[');
 655   1              bt = (uint8)(value>>24);
 656   1              SendByteHex(bt);
 657   1              bt = (uint8)((value&0x00FF0000L)>>16);
 658   1              SendByteHex(bt);
 659   1              bt = (uint8)((value&0x0000FF00L)>>8);
 660   1              SendByteHex(bt);
 661   1              bt = (uint8)((value&0x000000FFL));
 662   1              SendByteHex(bt);
 663   1              SendChar(']');
 664   1              SendChar(' ');
 665   1      #endif
 666   1      }
 667          
 668          
 669          
 670          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1790    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V8.05a   MAIN                                                                 05/31/2013 15:39:46 PAGE 12  

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35      36
   IDATA SIZE       =      1       2
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
